name: Update V2 Layer ARN Docs

on:
  workflow_call:
    inputs:
      latest_published_version:
        description: "Latest PyPi published version to rebuild latest docs for, e.g. v2.0.0"
        type: string
        required: true

permissions:
  # lower privilege propagated from parent workflow (reusable_deploy_v2_layer_stack.yml)
  contents: write
  pull-requests: write
  pages: none
  id-token: none

env:
  BRANCH: develop

jobs:
  publish_v2_layer_arn:
    # Force Github action to run only a single job at a time (based on the group name)
    # This is to prevent race-condition and inconsistencies with changelog push
    concurrency:
      group: changelog-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository # reusable workflows start clean, so we need to checkout again
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab  # v3.5.2
        with:
          fetch-depth: 0
      - name: Git client setup and refresh tip
        run: |
          git config user.name "Release bot"
          git config user.email "aws-devax-open-source@amazon.com"
          git config pull.rebase true
          git config remote.origin.url >&- || git remote add origin https://github.com/"${origin}" # Git Detached mode (release notes) doesn't have origin
          git pull origin "${BRANCH}"
      - name: Download CDK layer artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: cdk-layer-stack
          path: cdk-layer-stack/
      - name: Replace layer versions in documentation
        run: |
          ls -la cdk-layer-stack/
          ./layer/scripts/update_layer_arn.sh cdk-layer-stack
      - name: Create PR
        run: bash .github/scripts/create_pr_for_staged_changes.sh docs/index.md examples
        env:
          PR_TITLE: "docs(layers): update v2 layer ARN on documentation"
          TEMP_BRANCH_PREFIX: "ci-docs"
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cleanup orphaned branch
        if: failure()
        run: git push origin --delete "${TEMP_BRANCH_PREFIX}-${GITHUB_RUN_ID}" || echo "Must have failed before creating temporary branch; no cleanup needed."
        env:
          TEMP_BRANCH_PREFIX: "ci-docs"
          GITHUB_RUN_ID: ${{ github.run_id }}
