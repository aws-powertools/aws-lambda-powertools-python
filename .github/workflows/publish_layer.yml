name: Deploy layer to all regions

permissions:
  id-token: write
  contents: read

on:
  # TODO: remove after setup is finished
  workflow_dispatch:
    inputs:
      latest_published_version:
        description: "Latest PyPi published version to rebuild latest docs for, e.g. v1.22.0"
        default: "v1.22.0"
        required: true
  workflow_run:
    workflows: [ "Publish to PyPi" ]
    types:
      - completed


jobs:
  build-layer:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.12'
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Set release notes tag
        run: |
          RELEASE_TAG_VERSION=${{ github.event.release.tag_name }}  | ${{ inputs.latest_published_version }}
          echo "RELEASE_TAG_VERSION=${RELEASE_TAG_VERSION:1}" >> $GITHUB_ENV
      - name: install cdk and deps
        run: |
          npm install -g aws-cdk@2.29.0
          cdk --version
      - name: install deps
        run: |
          cd layer
          pip install -r requirements.txt
      - name: CDK build
        run: cdk synth --context version=$RELEASE_TAG_VERSION -o cdk.out
      - name: zip output
        run: zip -r cdk.out.zip cdk.out
      - name: Archive CDK artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.zip

  deploy-beta:
    needs:
      - build-layer
    uses: ./.github/workflows/deploy_cdk_stack.yml
    with:
      stage: "BETA"
    secrets:
      target-account: ${{ secrets.LAYERS_BETA_ACCOUNT }}

  deploy-prod:
    needs:
      - deploy-beta
    uses: ./.github/workflows/deploy_cdk_stack.yml
    with:
      stage: "PROD"
    secrets:
      target-account: ${{ secrets.LAYERS_PROD_ACCOUNT }}
